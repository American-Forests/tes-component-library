{"version":3,"file":"tes-component-library.cjs.production.min.js","sources":["../src/accordion/component.tsx","../src/button/component.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { PlusIcon, MinusIcon, ChevronDownIcon } from '@radix-ui/react-icons';\nimport { AccordionProps, AccordionItemType } from './types';\nimport { Accordion as AccessibleAccordion, AccordionItem as Item } from \"@szhsin/react-accordion\";\n\nconst AccordionItem: FC<AccordionItemType> = ({ \n  header, \n  variant, \n  nested,\n  ...rest }) => (\n  <Item\n    {...rest}\n    header={({ state: { isEnter } }) => (\n      <div className={\n        `text-brand-green-dark justify-between items-center border-b-brand-green rounded-sm flex flex-row w-full h-full p-4 \n        ${variant === 'secondary' && 'text-sm'}\n        ${nested && \"text-[#333335] text-sm font-semibold\"}\n      `}>\n        {header}\n        {(variant === 'primary' && !nested) && \n          <div className='flex text-brand-green justify-center items-center border-brand-green border-2 w-4 h-4 rounded-sm'>\n            {isEnter ? <MinusIcon/> : <PlusIcon />}\n          </div>\n        }\n        {(variant === 'secondary' || nested) && \n          <div className={`text-brand-green w-4 h-4 transition-transform duration-200 ease-in-out ${isEnter && \"rotate-180\"}`}>\n            <ChevronDownIcon />\n         </div>\n        }\n      </div>\n    )}\n    className={`\n      border-b-[3px] border-b-brand-green justify-between\n      ${variant === 'secondary' && 'border-b border-b-[#E0E0E0]'}\n      ${nested && \"border-b-[0px] border-t border-t-slant-200\"}\n    `}\n    buttonProps={{\n      className: 'text-brand-green-dark justify-between items-center border-none border-b-brand-green flex flex-row w-full hover:bg-brand-green hover:bg-opacity-5'\n    }}\n    contentProps={{\n      className: \"transition-height duration-200 ease-in-out\"\n    }}\n    panelProps={{ className: \"p-0\" }}\n  />\n);\n\nexport const Accordion: FC<AccordionProps> = ({\n  items,\n  variant\n}) => (\n  <AccessibleAccordion transition transitionTimeout={200}>\n    {items && items.map(item => (\n      item.type === \"accordion\" ? \n      (<AccordionItem header={item.header} variant={variant}>\n          {item.elements?.map((element) => (\n            <AccessibleAccordion  transition transitionTimeout={200}>\n              <AccordionItem header={element.header} nested>\n                {element.content?.map(c => (\n                  <p className={`text-sm pl-6 my-4 text-gray-600 ${c.style}`}>{c.text}</p>\n                ))}\n              </AccordionItem>\n            </AccessibleAccordion>\n          ))}\n        </AccordionItem>\n      ) : item.type === \"list\" ? (\n        <AccordionItem header={item.header}  variant={variant}>\n          {item.overview && <p className=\"pl-4 py-4 text-sm text-gray-600\">{item.overview}</p>}\n          <ol  className=\"pl-4\">\n            {item.content?.map((c, index) => (\n              <li className={`pb-4 ${c.style}`}>\n                <div className=\"w-5 h-5 font-semibold text-sm rounded-full inline-block mr-2 text-center bg-brand-green bg-opacity-20\">{index + 1}</div>\n                <span className=\"text-sm text-gray-600\">{c.text}</span>\n                \n              </li>\n            ))}\n          </ol>\n        </AccordionItem>\n      ) : (\n        <AccordionItem header={item.header} variant={variant}>\n          {item.content?.map(c => (\n            <p className={c.style}>{c.text}</p>\n          ))}\n        </AccordionItem>\n      )\n    ))}\n  </AccessibleAccordion>\n);\n","import React, { FC } from 'react';\nimport { ButtonProps } from './types';\n\nexport const Button: FC<ButtonProps> = ({\n  text,\n  variant = 'primary',\n  ...props\n}) => {\n  return (\n    <button\n      className={`${\n        variant === 'primary'\n          ? 'text-white bg-brand-green hover:bg-brand-green-dark'\n          : 'text-brand-green bg-white border-brand-green border-2 hover:bg-brand-green hover:text-white'\n      } shadow rounded-lg w-fit px-4 py-2 transition duration-200 ease-in-out`}\n      {...props}\n    >\n      {text}\n    </button>\n  );\n};\n"],"names":["AccordionItem","header","variant","nested","rest","React","Item","isEnter","state","className","MinusIcon","PlusIcon","ChevronDownIcon","buttonProps","contentProps","panelProps","items","AccessibleAccordion","transition","transitionTimeout","map","item","type","elements","_item$elements","element","content","_element$content","c","style","text","overview","_item$content","index","_item$content2","_ref$variant","props"],"mappings":"gYAKMA,EAAuC,YAA1B,IACjBC,IAAAA,OACAC,IAAAA,QACAC,IAAAA,OACGC,SAAI,OACPC,gBAACC,iCACKF,GACJH,OAAQ,YAAA,IAAYM,IAATC,MAASD,QAAO,OACzBF,uBAAKI,2IAEW,cAAZP,GAA2B,yBAC3BC,GAAU,oDAEXF,EACa,YAAZC,IAA0BC,GAC1BE,uBAAKI,UAAU,oGACFJ,gBAAVE,EAAWG,YAAeC,mBAGjB,cAAZT,GAA2BC,IAC3BE,uBAAKI,qFAAqFF,GAAW,eACnGF,gBAACO,2BAKTH,iFAEgB,cAAZP,GAA2B,2CAC3BC,GAAU,uDAEdU,YAAa,CACXJ,UAAW,oJAEbK,aAAc,CACZL,UAAW,8CAEbM,WAAY,CAAEN,UAAW,kDAIgB,YAAvB,IACpBO,IAAAA,MACAd,IAAAA,QAAO,OAEPG,gBAACY,aAAoBC,cAAWC,kBAAmB,KAChDH,GAASA,EAAMI,KAAI,SAAAC,GAAI,UAAA,MACR,cAAdA,EAAKC,KACJjB,gBAACL,GAAcC,OAAQoB,EAAKpB,OAAQC,QAASA,YACzCmB,EAAKE,iBAALC,EAAeJ,KAAI,SAACK,GAAO,MAAA,OAC1BpB,gBAACY,aAAqBC,cAAWC,kBAAmB,KAClDd,gBAACL,GAAcC,OAAQwB,EAAQxB,OAAQE,oBACpCsB,EAAQC,gBAARC,EAAiBP,KAAI,SAAAQ,GAAC,OACrBvB,qBAAGI,6CAA8CmB,EAAEC,OAAUD,EAAEE,eAMzD,SAAdT,EAAKC,KACPjB,gBAACL,GAAcC,OAAQoB,EAAKpB,OAASC,QAASA,GAC3CmB,EAAKU,UAAY1B,qBAAGI,UAAU,mCAAmCY,EAAKU,UACvE1B,sBAAKI,UAAU,iBACZY,EAAKK,gBAALM,EAAcZ,KAAI,SAACQ,EAAGK,GAAK,OAC1B5B,sBAAII,kBAAmBmB,EAAEC,OACvBxB,uBAAKI,UAAU,yGAAyGwB,EAAQ,GAChI5B,wBAAMI,UAAU,yBAAyBmB,EAAEE,YAOnDzB,gBAACL,GAAcC,OAAQoB,EAAKpB,OAAQC,QAASA,YAC1CmB,EAAKK,gBAALQ,EAAcd,KAAI,SAAAQ,GAAC,OAClBvB,qBAAGI,UAAWmB,EAAEC,OAAQD,EAAEE,8BC7EC,gBACrCA,IAAAA,KAAIK,IACJjC,QAAAA,aAAU,YACPkC,SAEH,OACE/B,wCACEI,WACc,YAAZP,EACI,sDACA,yKAEFkC,GAEHN"}